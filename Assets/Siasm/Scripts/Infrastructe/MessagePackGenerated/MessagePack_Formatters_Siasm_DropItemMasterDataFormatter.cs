// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.Siasm
{
    public sealed class DropItemMasterDataFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Siasm.DropItemMasterData>
    {
        // AchievementLevel
        private static global::System.ReadOnlySpan<byte> GetSpan_AchievementLevel() => new byte[1 + 16] { 176, 65, 99, 104, 105, 101, 118, 101, 109, 101, 110, 116, 76, 101, 118, 101, 108 };
        // DropInventoryType
        private static global::System.ReadOnlySpan<byte> GetSpan_DropInventoryType() => new byte[1 + 17] { 177, 68, 114, 111, 112, 73, 110, 118, 101, 110, 116, 111, 114, 121, 84, 121, 112, 101 };
        // DetailNumber
        private static global::System.ReadOnlySpan<byte> GetSpan_DetailNumber() => new byte[1 + 12] { 172, 68, 101, 116, 97, 105, 108, 78, 117, 109, 98, 101, 114 };

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::Siasm.DropItemMasterData value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value is null)
            {
                writer.WriteNil();
                return;
            }

            var formatterResolver = options.Resolver;
            writer.WriteMapHeader(3);
            writer.WriteRaw(GetSpan_AchievementLevel());
            writer.Write(value.AchievementLevel);
            writer.WriteRaw(GetSpan_DropInventoryType());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Siasm.DropInventoryType>(formatterResolver).Serialize(ref writer, value.DropInventoryType, options);
            writer.WriteRaw(GetSpan_DetailNumber());
            writer.Write(value.DetailNumber);
        }

        public global::Siasm.DropItemMasterData Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            var formatterResolver = options.Resolver;
            var length = reader.ReadMapHeader();
            var ____result = new global::Siasm.DropItemMasterData();

            for (int i = 0; i < length; i++)
            {
                var stringKey = global::MessagePack.Internal.CodeGenHelpers.ReadStringSpan(ref reader);
                switch (stringKey.Length)
                {
                    default:
                    FAIL:
                      reader.Skip();
                      continue;
                    case 16:
                        if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_AchievementLevel().Slice(1))) { goto FAIL; }

                        ____result.AchievementLevel = reader.ReadInt32();
                        continue;
                    case 17:
                        if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_DropInventoryType().Slice(1))) { goto FAIL; }

                        ____result.DropInventoryType = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Siasm.DropInventoryType>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 12:
                        if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_DetailNumber().Slice(1))) { goto FAIL; }

                        ____result.DetailNumber = reader.ReadInt32();
                        continue;

                }
            }

            reader.Depth--;
            return ____result;
        }
    }

}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name
