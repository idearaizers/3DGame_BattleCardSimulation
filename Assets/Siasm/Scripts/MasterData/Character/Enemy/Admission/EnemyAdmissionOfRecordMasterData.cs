using System.Linq;
using UnityEngine;

namespace Siasm
{
    public class CreatureAdmissionOfRecordModel
    {
        public int CreatureId { get; set; }
        public string[] DescriptionTexts { get; set; }
    };

    public class EnemyAdmissionOfRecordMasterData
    {
        public CreatureAdmissionOfRecordModel GetEnemyAdmissionOfRecordModel(int creatureId)
        {
            // MEMO:
            // 国コード メーカーコード 商品コード チェックデジット
            // 本来のバーコードとは桁数は違う形で記載
            // クリシェミナクラス-D-C-B-A-S
            // 管理番号 1-12-123-1234-1
            // エーカム、ドゥベー、トゥリーニ、チャトゥヴァーリ
            // クオリティクラス：
            // イノベーター = 革新者、innovator、ベーター
            // アーリーアダプター = 初期採用者、early adaptor、ダプター
            // アーリーマジョリティ = 初期追随者、Early Majority、アリティア
            // レイトマジョリティ = 後期追随者、Late Majority、レイティア
            // ラガード = 伝統主義者、Laggards、ラガーズ
            // 溝 = キャズム、
            // 面接番号

            // MEMO:
            // この商品を開発した人の状況などがわかるもの
            // カードのアイデアのためのもの
            // シェミナの世界観（第一世代）を説明した前提がよさそう
            var creatureAdmissionOfRecordModels = new CreatureAdmissionOfRecordModel[]
            {
                // ミミクリーペンギン
                new CreatureAdmissionOfRecordModel
                {
                    CreatureId = 2001,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この鳥は教えるとAIのように学習をはじめ、だんだんと真似をし始めた。そして、それは本物以上に本物になり、本物は不要になっていった。そして、本物を超えたため、本物が偽物になった",
                        "開発者ファイル-02: ケース-02では、この鳥はやがて意思を真似し始めた。そして、有名で優秀な人の代わりになり、本物は必要なくなっていった",
                        "開発者ファイル-03: ケース-03では、この鳥は労働の代わりになり、そして、人々は働くなくなった。人々は好きな仕事だけをやるようになった",
                        "開発者ファイル-04: ケース-04では、この鳥は学習のために真似を恐れないが、人々は逆にその姿を見て真似を恐れていった。誰もが最初は真似から入るのに誰も自分以外を真似をしなくなった",
                        "開発者ファイル-05: ケース-05では、この鳥は本物と偽物の価値を見分けることができたが、人々は逆に見分けることができなくなった",
                        "開発者ファイル-06: ケース-06では、この鳥はコミュニケーションができたので、良き話し相手になった。パートナー",
                        "開発者ファイル-07: ケース-07では、この鳥はしぐさやくせも真似るようになった。映像でみるものはすべてこの鳥になった。この鳥はたいくつさせないことも提供した。そして家族になった",
                        "開発者ファイル-08: ケース-08では、この鳥は本人が死んでも一人でにいきるようになった。やがてこの鳥が多くを埋め尽くした",
                        "開発者ファイル-09: ケース-09では、この鳥は学習すると雑用をしてお金をかせがせることができた。そして、当の本人は自由な時間を提供した。食事や掃除などの雑用もこなしてくれた。本人はVR世界で遊び垂れることがで出来て幸せだった",
                        "開発者ファイル-10: ケース-10では、この鳥は教えると学習し、雑用をこなして人々の働きの助けになった。そして人々から働く楽しみを奪った。楽しみを奪われた人は早く死んでいった",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は働きたくなかった。彼は自分の代わりに仕事をするものがあれば自由にできると考えて開発をした。クオリティオーバーで作った施策は大成功した。この商品はきっと人々をしあわせにできるものだと感じた",
                        "開発者ファイル-12: 開発が始まって、彼の夢はかなった",
                        "開発者ファイル-13: あるとき、誰かが変なことを教えた。。奴が来た。。いろんな人の思想や考えが混じった結果、本来の形とは違うものがいろいろできた",
                        "開発者ファイル-14: この鳥は繁殖をせず、食事の低コストで非常にメンテナンスもしやすかった",
                        "開発者ファイル-15: 成長にはリミッターを付けることも可能だった。繁殖もしないので非常に安全",
                        "開発者ファイル-16: 見た目は彼がこどのころに好きだった動物にした",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。最終的に～～によって■■は滅んだ",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                        // 開発者名：ヒエア
                        // 途中からシェミナが引き継いだ
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // クラブラッド
                    CreatureId = 2002,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この蟹は血を保有し、その血を輸血することで体が若返った。自分の細胞になじむ要素で出来ていた。そしてそれは筋肉や骨、細胞までも若返られた",
                        "開発者ファイル-02: ケース-02では、この蟹は人々の寿命を倍の200年に伸ばした。もはや老化は人類の敵ではなくなった",
                        "開発者ファイル-03: ケース-03では、この蟹の血は人々にいつでも美しい肌や若い体を手に入れた。人々の精神も若くなっていった",
                        "開発者ファイル-04: ケース-04では、この蟹の血は人々の身体機能も若くしていった。薬物被害もなく最大限のパフォーマンスを発揮できた",
                        "開発者ファイル-05: ケース-05では、この蟹の血は人々の血縁関係の壁を破壊し、そしてみんな同じ血となった。そして世界は平和になった。誰もが血を分け与えて家族になった",
                        "開発者ファイル-06: ケース-06では、この蟹の血はDNAを書き換えることができた。劣性遺伝子によって生じる体の障害もスピードは遅いが確実に改善した",
                        "開発者ファイル-07: ケース-07では、この蟹の血は毒素を体から出すのにうって付けだった。人々は健康を手に入れた。そして、不健康を趣向品として加速させた",
                        "開発者ファイル-08: ケース-08では、この蟹の血は骨を強化した。怪我が減り誰もがスポーツを楽しむことができた",
                        "開発者ファイル-09: ケース-09では、この蟹の血は人々を怪我からの恐怖を軽減した。そして、人々は平気で自分や他人を傷つけるようになった。修練進化、ブルーブラッド、処女、寒さに強い、蟹化、透明な血",
                        "開発者ファイル-10: ケース-10では、この蟹の血はアレルギーを改善させた。そしてアレルギーを解消させた。ホルモン。老廃物、血液により体が大型化できる、アドレナリン、血液ドリンク、血液が同じになったことでみんな死んだ。",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は若くなりたかった",
                        "開発者ファイル-12: カブトガニをヒントに開発した",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // バックスハンド
                    CreatureId = 2003,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この腕は第3の腕となった。拡張デバイス。強化アーマーの一種",
                        "開発者ファイル-02: ケース-02では、この腕は草のように次々と生えた",
                        "開発者ファイル-03: ケース-03では、この腕は足のように歩いた",
                        "開発者ファイル-04: ケース-04では、この腕は脳を鍛えた",
                        "開発者ファイル-05: ケース-05では、この腕は拍手をしたり、表情を与えてくれた",
                        "開発者ファイル-06: ケース-06では、この腕はセンサーのように教えてくれた",
                        "開発者ファイル-07: ケース-07では、この腕は友達になってくれた",
                        "開発者ファイル-08: ケース-08では、この腕は意思があり、自動でサポートしてくれた",
                        "開発者ファイル-09: ケース-09では、この腕はより沿ってくれた",
                        "開発者ファイル-10: ケース-10では、この腕は誰よりも自分を理解してくれた",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は自身のサポーターがほしかった。暖かさがほしかった",
                        "開発者ファイル-12: バックスハンド：生える手、サポーター、マッサージ、補助手、ナチュラルディザスターハンド、接ぎ手、液体記憶金属",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // マウスブルーダー
                    CreatureId = 2004,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この蜘はメディカルサポートを行う",
                        "開発者ファイル-02: ケース-02では、この蜘は",
                        "開発者ファイル-03: ケース-03では、この蜘は",
                        "開発者ファイル-04: ケース-04では、この蜘は",
                        "開発者ファイル-05: ケース-05では、この蜘は",
                        "開発者ファイル-06: ケース-06では、この蜘は",
                        "開発者ファイル-07: ケース-07では、この蜘は",
                        "開発者ファイル-08: ケース-08では、この蜘は",
                        "開発者ファイル-09: ケース-09では、この蜘は",
                        "開発者ファイル-10: ケース-10では、この蜘は",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は健康が欲しかった",
                        "開発者ファイル-12: マウスブルーダー：寄生体、共存",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // シェルソリューター
                    CreatureId = 2005,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この頭は痛みを遮断する",
                        "開発者ファイル-02: ケース-02では、この頭は",
                        "開発者ファイル-03: ケース-03では、この頭は",
                        "開発者ファイル-04: ケース-04では、この頭は",
                        "開発者ファイル-05: ケース-05では、この頭は",
                        "開発者ファイル-06: ケース-06では、この頭は",
                        "開発者ファイル-07: ケース-07では、この頭は",
                        "開発者ファイル-08: ケース-08では、この頭は",
                        "開発者ファイル-09: ケース-09では、この頭は",
                        "開発者ファイル-10: ケース-10では、この頭は",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は痛みを克服したかった。痛みの遮断",
                        "開発者ファイル-12: シェルソリューター：超安全、丸男、バリアブルインナー、モザイクフリルスカート",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // ゴルドバード
                    CreatureId = 2006,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この鳥は黄金を生む",
                        "開発者ファイル-02: ケース-02では、この鳥は食べた後で腸内バクテリアが化学反応を行い黄金の卵を産む",
                        "開発者ファイル-03: ケース-03では、この鳥は",
                        "開発者ファイル-04: ケース-04では、この鳥は",
                        "開発者ファイル-05: ケース-05では、この鳥は",
                        "開発者ファイル-06: ケース-06では、この鳥は",
                        "開発者ファイル-07: ケース-07では、この鳥は",
                        "開発者ファイル-08: ケース-08では、この鳥は",
                        "開発者ファイル-09: ケース-09では、この鳥は",
                        "開発者ファイル-10: ケース-10では、この鳥は",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は黄金がほしかった",
                        "開発者ファイル-12: ゴルドバード：黄金、金の卵、錬金術、腸内バクテリア",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // デコレーター
                    CreatureId = 2007,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この瞳は見た目を変える",
                        "開発者ファイル-02: ケース-02では、この瞳は見た目を変えて自分に自信を与える",
                        "開発者ファイル-03: ケース-03では、この瞳は",
                        "開発者ファイル-04: ケース-04では、この瞳は",
                        "開発者ファイル-05: ケース-05では、この瞳は",
                        "開発者ファイル-06: ケース-06では、この瞳は",
                        "開発者ファイル-07: ケース-07では、この瞳は",
                        "開発者ファイル-08: ケース-08では、この瞳は",
                        "開発者ファイル-09: ケース-09では、この瞳は",
                        "開発者ファイル-10: ケース-10では、この瞳は",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼はかっこよくなりたかった",
                        "開発者ファイル-12: デコレーター：褪せる、あせる、見た目のカスタマイズ、肌アート、アザ、タトゥー、シール",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // レボリューター
                    CreatureId = 2008,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この衣は笑わせる",
                        "開発者ファイル-02: ケース-02では、この衣は",
                        "開発者ファイル-03: ケース-03では、この衣は",
                        "開発者ファイル-04: ケース-04では、この衣は",
                        "開発者ファイル-05: ケース-05では、この衣は",
                        "開発者ファイル-06: ケース-06では、この衣は",
                        "開発者ファイル-07: ケース-07では、この衣は",
                        "開発者ファイル-08: ケース-08では、この衣は",
                        "開発者ファイル-09: ケース-09では、この衣は",
                        "開発者ファイル-10: ケース-10では、この衣は",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は進化したかった",
                        "開発者ファイル-12: レボリューター：衣、ころも、笑いによる進化、人体の欠陥、特殊な目、サイバー技術、ニチャ、楽しいと活性化する、",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // グッドニュース
                    CreatureId = 2009,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この虫は良い知らせを伝える",
                        "開発者ファイル-02: ケース-02では、この虫は",
                        "開発者ファイル-03: ケース-03では、この虫は",
                        "開発者ファイル-04: ケース-04では、この虫は",
                        "開発者ファイル-05: ケース-05では、この虫は",
                        "開発者ファイル-06: ケース-06では、この虫は",
                        "開発者ファイル-07: ケース-07では、この虫は",
                        "開発者ファイル-08: ケース-08では、この虫は",
                        "開発者ファイル-09: ケース-09では、この虫は",
                        "開発者ファイル-10: ケース-10では、この虫は",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は楽しいニュースを届けたかった",
                        "開発者ファイル-12: グッドニュース：虫のしらせ、いいニュース、他メディアへの攻撃、ハッピーニュース、笑えるおかしなニュース、宇宙人はいた！？、都合のいいニュース",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // クラウドシープ
                    CreatureId = 2010,
                    DescriptionTexts = new string[]
                    {
                        // いろんな失敗談のレポートで解析度によってもいいかも
                        // 本来の使い方とは違う曲げられた情報を記載したい
                        // 前半はよいことで、後半はホラーよりにしたいかも
                        "開発者ファイル-01: ケース-01では、この羊は思考を共有する",
                        "開発者ファイル-02: ケース-02では、この羊は",
                        "開発者ファイル-03: ケース-03では、この羊は",
                        "開発者ファイル-04: ケース-04では、この羊は",
                        "開発者ファイル-05: ケース-05では、この羊は",
                        "開発者ファイル-06: ケース-06では、この羊は",
                        "開発者ファイル-07: ケース-07では、この羊は",
                        "開発者ファイル-08: ケース-08では、この羊は",
                        "開発者ファイル-09: ケース-09では、この羊は",
                        "開発者ファイル-10: ケース-10では、この羊は",

                        // 最終的な執着地点のレポート
                        // 取り扱い説明書
                        "開発者ファイル-11: 開発者■■■のレポート。彼は誰もが天才になりたかった",
                        "開発者ファイル-12: クラウドシープ：思考のクラウド化、波動、アイデアの種、動物との会話、ソート、思考の文字化",
                        "開発者ファイル-13: ",
                        "開発者ファイル-14: ",
                        "開発者ファイル-15: ",
                        "開発者ファイル-16: ",
                        "開発者ファイル-17: ",
                        "開発者ファイル-18: ",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                    }
                },
                new CreatureAdmissionOfRecordModel
                {
                    // シェミナ
                    CreatureId = 2051,
                    DescriptionTexts = new string[]
                    {
                        // 
                        "開発者ファイル-01: ケース-01では、この箱はあなたの想像を手助けする、思考を育てる",
                        "開発者ファイル-02: ケース-02では、この箱はあなたが考えたアイデアを形にする方法を手伝ってくれる",
                        "開発者ファイル-03: ケース-03では、この箱はファイブブレインがあなたの考えを助けてくれる",
                        "開発者ファイル-04: ケース-04では、この箱はファイブブレインの一人、いかな。子供たちの未来について、思考力の再生と子供たちの育成を願う",
                        "開発者ファイル-05: ケース-05では、この箱はファイブブレインの一人、味覚",
                        "開発者ファイル-06: ケース-06では、この箱はファイブブレインの一人、サブリーダー",
                        "開発者ファイル-07: ケース-07では、この箱はファイブブレインの一人、指揮者",
                        "開発者ファイル-08: ケース-08では、この箱はファイブブレインの一人、考えを読み取る機械",
                        "開発者ファイル-09: ケース-09では、この箱はさらに一人を追加した。誰もが無意識化で操作をできるようにした",
                        "開発者ファイル-10: ケース-10では、この箱はクオリティオーバーシステムを生み出した",
                        // 
                        "開発者ファイル-11: 開発者■■■のレポート。彼は誰もが素晴らしいアイデアを作ることができるものがほしかった",
                        "開発者ファイル-12: 3Dプリンターのように簡単に想像したものを形にできるものを作った",
                        "開発者ファイル-13: 味覚や手触りなども設定できた",
                        "開発者ファイル-14: イデアライザーの始まり。考えることを助ける技術、年々増え続ける技術や進歩に子供たちがついていけないことを問題しした",
                        "開発者ファイル-15: シェミナは三人兄弟姉妹の一番下で、真ん中と上が地球で暴れている。一番下だけどお姉さんポジション",
                        "開発者ファイル-16: シェミナとガラアドは不思議な縁で引かれた。そして、二人とも死んで、別の形として生きている",
                        "開発者ファイル-17: きゅうない世界を作ったのもシェミナでたった一つのアイデアから生まれた",
                        "開発者ファイル-18: シェミナたちは基本的に無邪気で、探求ややりたいことのためなら犠牲もいとわない。頭のねじが外れているとは違い狂人をコントロールしている",
                        "開発者ファイル-19: 私のアイデアは■■■■に奪われた。そして、変えられ、今の形になった。。",
                        "開発者ファイル-20: だが、私が本来やりたかったことは■■■■だった。そしてそれはかなった"
                        // イカナの考えに賛同したものは幸福度が高い
                        // そして賛同したものだけその考えや技術を手に入れることができた
                        // 扱うのにコツがいるため普通の人は扱えない
                        // 安全で安心な幸せを手に入れた
                        // アーリーアクセス版、早期に入った時期の順にランクがある
                    }
                }
            };

            // 一致した内容を取得
            var creatureAdmissionOfRecordModel = creatureAdmissionOfRecordModels.FirstOrDefault(creatureAdmissionOfRecordModel => creatureAdmissionOfRecordModel.CreatureId == creatureId);
            if (creatureAdmissionOfRecordModel == null)
            {
                Debug.LogWarning($"指定したCreatureAdmissionOfRecordModelが取得できませんでした => creatureId: {creatureId}");
                return null;
            }

            return creatureAdmissionOfRecordModel;
        }
    }
}
